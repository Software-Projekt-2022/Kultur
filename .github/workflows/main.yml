name: CI

#1
# Controls when the workflow will run
on:
  push:
    branches: [main]

  #Allows you to run this workflow manually from the Action tab
  workflow_dispatch:

#2
env:
  REGISTRY: "registry.digitalocean.com/cybercityregistry"
  IMAGE_NAME_FRONTEND: "kultur_fr:latest"
  IMAGE_NAME_BACKEND: "kultur_ba:latest"

#3
jobs:
  build_and_push_frontend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout to repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_FRONTEND) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! - z "(doctl registry repository list | grep "$(echo $IMAGE_NAME_FRONTEND)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_FRONTEND)

  build_and_push_backend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout to repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_BACKEND) ./restAPI/

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! - z "(doctl registry repository list | grep "$(echo $IMAGE_NAME_BACKEND)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_BACKEND)

  deploy:
    runs-on: ubuntu-20.04
    needs: build_and_push

    steps:
      - name: Stop running docker
        uses: appleboy/ssh-action@v0.1.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER}}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_ACCESS }},GITHUB_SHA
          script: |
            # Stop docker
            cd ~/docker
            docker-compose Stop

      - name: Start docker (deploy this)
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER}}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_ACCESS }},GITHUB_SHA
          script: |
            cd ~/docker
            docker-compose pull
            docker-compose up -d --force-recreate
